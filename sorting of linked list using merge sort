 Given a singly linked list of integers, sort it using 'Merge Sort.'

CODE::::

Node *merge(Node *left, Node *right) {
    if (left == NULL) {
        return right;
    }
    if (right == NULL) {
        return left;
    }
    Node *ans = new Node(-1);
    Node *head = ans;

    while (left != NULL && right != NULL) {
        if (left->data <= right->data) {
            head->next = left;
            head = left;
            left = left->next;
        } else {
            head->next = right;
            head = right;
            right = right->next;
        }
    }

    if (left != NULL) {
        head->next = left;
    }

    if (right != NULL) {
        head->next = right;
    }

    ans = ans->next;
    return ans;
}


Node *midpoint(Node *head1){
	if(head1==NULL){
		return NULL;
	}
	if(head1->next==NULL){
		return head1;
	}
	Node *temp=head1;
	Node *first=head1->next;
	while(first!=NULL&&first->next!=NULL){
		temp=temp->next;
		first=first->next->next;
	}
	return temp;
}
Node *mergeSort(Node *head)
{
	//Write your code here
	if(head==NULL||head->next==NULL){
		return head;
	}

	Node *mid=midpoint(head);
	Node *left=head;
	Node *right=mid->next;
	mid->next=NULL;
	left=mergeSort(left);
	right=mergeSort(right);
	Node *final=merge(left,right);
	return final;


}
